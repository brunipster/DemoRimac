[{"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\App.tsx":"1","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\index.tsx":"2","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\reportWebVitals.ts":"3","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\pages\\HomePage\\index.tsx":"4","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\models\\ContactModel.ts":"5","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\helpers\\FormValidatorHelper.ts":"6","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\helpers\\DocumentTypeConstant.ts":"7","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\helpers\\FormHelper.ts":"8","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\InputComponent\\index.tsx":"9","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\CheckboxComponent\\index.tsx":"10","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\ButtonComponent\\index.tsx":"11","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\SelectComponent\\index.tsx":"12","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\helpers\\FormPattern.ts":"13","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\InputDateComponents\\index.tsx":"14","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\services\\PersonaServices.ts":"15","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\helpers\\HttpsConnection.ts":"16","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\WizardComponent\\index.tsx":"17","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\sections\\PersonalInfoSection\\index.tsx":"18","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\sections\\PlanSelectionSection\\index.tsx":"19","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\models\\OwnerInfoModel.ts":"20","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\RadioComponent\\index.tsx":"21"},{"size":253,"mtime":1610233740664,"results":"22","hashOfConfig":"23"},{"size":500,"mtime":1610234246161,"results":"24","hashOfConfig":"23"},{"size":425,"mtime":1610212376303,"results":"25","hashOfConfig":"23"},{"size":9638,"mtime":1610262211792,"results":"26","hashOfConfig":"23"},{"size":2170,"mtime":1610244600888,"results":"27","hashOfConfig":"23"},{"size":4504,"mtime":1610264148206,"results":"28","hashOfConfig":"23"},{"size":2203,"mtime":1610220903581,"results":"29","hashOfConfig":"23"},{"size":1331,"mtime":1610220592246,"results":"30","hashOfConfig":"23"},{"size":2863,"mtime":1610251422253,"results":"31","hashOfConfig":"23"},{"size":1099,"mtime":1610251637315,"results":"32","hashOfConfig":"23"},{"size":2067,"mtime":1610249602492,"results":"33","hashOfConfig":"23"},{"size":4353,"mtime":1610242499402,"results":"34","hashOfConfig":"23"},{"size":261,"mtime":1610243694201,"results":"35","hashOfConfig":"23"},{"size":1948,"mtime":1610247415995,"results":"36","hashOfConfig":"23"},{"size":798,"mtime":1610254180271,"results":"37","hashOfConfig":"23"},{"size":179,"mtime":1610252302912,"results":"38","hashOfConfig":"23"},{"size":2415,"mtime":1610263367058,"results":"39","hashOfConfig":"23"},{"size":6124,"mtime":1610265533843,"results":"40","hashOfConfig":"23"},{"size":231,"mtime":1610255077014,"results":"41","hashOfConfig":"23"},{"size":2824,"mtime":1610265523916,"results":"42","hashOfConfig":"23"},{"size":1561,"mtime":1610265111484,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"koxp51",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\App.tsx",[],["94","95"],"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\index.tsx",[],"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\reportWebVitals.ts",[],"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\pages\\HomePage\\index.tsx",["96","97","98","99","100","101"],"import React, {useRef, useState} from 'react';\r\nimport './index.scss';\r\n\r\nimport {ReactComponent as ShieldIcon} from '@icons/shield.svg'\r\nimport {ReactComponent as PhoneIcon} from '@icons/phone.svg'\r\nimport {ReactComponent as MoneyIcon} from '@icons/money.svg'\r\nimport {ReactComponent as HospitalIcon} from '@icons/hospital.svg'\r\n\r\nimport {ContactModel} from '@models/ContactModel'\r\nimport InputComponent from '@components/InputComponent'\r\nimport InputDateComponent from '@components/InputDateComponents'\r\nimport SelectComponent from '@components/SelectComponent'\r\nimport CheckboxComponent from '@components/CheckboxComponent'\r\nimport ButtonComponent from '@components/ButtonComponent'\r\n\r\nimport PersonalInfoSection from '@sections/PersonalInfoSection'\r\nimport PlanSelectionSection from '@sections/PlanSelectionSection'\r\n\r\nimport WizardComponent from '@components/WizardComponent'\r\n\r\nimport PersonaServices, {iBodyRequest, iBodyResponse} from '@services/PersonaServices'\r\nimport { DocumentTypeConstant } from \"@helpers/DocumentTypeConstant\";\r\nimport { iOnChangeSelect } from '@helpers/FormValidatorHelper';\r\n\r\nconst oDocumentTypeConstant = new DocumentTypeConstant();\r\nconst Component:React.FunctionComponent = () => {\r\n\r\n    const [form, setForm] = useState<ContactModel>(new ContactModel())\r\n    const [userValidated, setUserValidated] = useState<iBodyResponse | undefined>({})\r\n    const [isLoadingForm, setIsLoadingForm] = useState<boolean>(false)\r\n    const [isEnable, setIsEnable] = useState<boolean>(false)\r\n    const [stepActive, setStepActive] = useState<number>(0)\r\n    const [totalSteps, setTotalStep] = useState<number>(5)\r\n    const [] = useState<boolean>(false)\r\n    const refWizard: any = useRef();\r\n\r\n\r\n    const handleInput = (event: any) => {\r\n        setForm(form.getStateInput(form, event))\r\n    }\r\n\r\n    const handleCheckbox = (event: any) => {\r\n        let currentForm = form.getStateCheckbox(form, event);\r\n        \r\n        if(currentForm.chkAllowPolicyDelivery.value && currentForm.chkAllowPolicyProtection.value){\r\n            setIsEnable(true);\r\n        }else{\r\n            setIsEnable(false);\r\n        }\r\n\r\n        setForm(currentForm)\r\n      }\r\n\r\n    const handleSelect = (select: iOnChangeSelect) => {\r\n        let currentForm = form.getStateSelect(form, select);\r\n\r\n        setForm(currentForm)\r\n    }\r\n\r\n    async function submitForm(e: any) {\r\n        e.preventDefault();\r\n        setIsLoadingForm(true);\r\n        try {\r\n            const body:iBodyRequest = {\r\n                documentType: form.sltDocumentType.value!,\r\n                documentNumber: form.inpDocumentNumber.value,\r\n                birthDay: form.inpBirthDate.value,\r\n                phoneNumber: form.inpMobilephoneNumber.value\r\n            }\r\n           const result = await PersonaServices.getUserInfo(body)\r\n           const dataResult:iBodyResponse = result.data?.data.tercero;\r\n           setUserValidated(dataResult);\r\n        } catch (error) {\r\n            \r\n        } finally {\r\n            setIsLoadingForm(false);\r\n        }\r\n    }\r\n\r\n    const handleChangeStepWizard = (stepActive: number) => {\r\n        setStepActive(stepActive);\r\n    };\r\n\r\n    function getWizardItems(): Array<any> {\r\n        let wizardItems: Array<any> = [\r\n          {\r\n            Component: PersonalInfoSection,\r\n            props: {\r\n              currentStep: 1,\r\n              totalSteps: totalSteps\r\n            }\r\n          },\r\n          {\r\n            Component: PlanSelectionSection,\r\n            props: {\r\n              currentStep: 2,\r\n              totalSteps: totalSteps\r\n            }\r\n          },\r\n        ];\r\n        \r\n        return wizardItems;\r\n      }\r\n    return (\r\n        <div className=\"p_home\">\r\n            <div className=\"p_home__info\">\r\n                <div className=\"p_home__info_wrapper\">\r\n                    <h1 className=\"p_home__info_title e-h2 e-text-light\">Seguro de <br/><span className=\"e-text-regular\">Salud</span></h1>\r\n                    <ul className=\"p_home__info_list\">\r\n                        <li className=\"p_home__info_list_item\">\r\n                            <ShieldIcon className=\"p_home__info_list_item_icon\"></ShieldIcon>\r\n                            <span className=\"p_home__info_list_item_text e-p4 e-text-light\">Cómpralo de manera fácil y rápida</span>\r\n                        </li>\r\n                        <li className=\"p_home__info_list_item\">\r\n                            <PhoneIcon className=\"p_home__info_list_item_icon\"></PhoneIcon>\r\n                            <span className=\"p_home__info_list_item_text e-p4 e-text-light\">Cotiza y compra tu seguro 100% digital</span>\r\n                        </li>\r\n                        <li className=\"p_home__info_list_item\">\r\n                            <MoneyIcon className=\"p_home__info_list_item_icon\"></MoneyIcon>\r\n                            <span className=\"p_home__info_list_item_text e-p4 e-text-light\">Hasta S/.12 millones de cobertura anual</span>\r\n                        </li>\r\n                        <li className=\"p_home__info_list_item\">\r\n                            <HospitalIcon className=\"p_home__info_list_item_icon\"></HospitalIcon>\r\n                            <span className=\"p_home__info_list_item_text e-p4 e-text-light\">Más de 300 clínicas en todo el Perú</span>\r\n                        </li>\r\n                    </ul>\r\n                    <small className=\"p_home__info_footer e-p6 e-text-light\"> 2020 RIMAC Seguros y Reaseguros</small>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"p_home__form\">\r\n                <div className=\"p_home__form_wrapper\">\r\n                    {!userValidated ?\r\n                        <>\r\n                            <h3 className=\"p_home__form_title e-h5 e-text-light\">Obtén tu <span className=\"p_home__form_title__Blue e-text-regular\">seguro ahora</span></h3>\r\n                            <p className=\"p_home__form_subtitle e-p4 e-text-light\">Ingresa los datos para comenzar</p>\r\n                            <div className=\"p_home__form_wrapper_container\">\r\n                                <form onSubmit={submitForm}>\r\n                                    <div className=\"p_home__form_input_group\">    \r\n                                        <SelectComponent\r\n                                            className=\"p_home__form_input_group_item\"\r\n                                            label=\"Tipo de documento*\"\r\n                                            options={oDocumentTypeConstant.listMainDocuments.map((elm)=>{return({...elm, name:elm.codeText})})}\r\n                                            model={form.sltDocumentType}\r\n                                            onChange={handleSelect}\r\n                                        />\r\n                                        <InputComponent\r\n                                            className=\"p_home__form_input_group_item\"\r\n                                            label=\"Número de Documento*\"\r\n                                            model={form.inpDocumentNumber}\r\n                                            onChange={handleInput}\r\n                                        />\r\n                                    </div>\r\n                                    <InputDateComponent\r\n                                        className=\"\"\r\n                                        label=\"Fecha de Nacimiento*\"\r\n                                        model={form.inpBirthDate}\r\n                                        onChange={handleInput}\r\n                                    />\r\n                                    <InputComponent\r\n                                        className=\"\"\r\n                                        label=\"Celular*\"\r\n                                        model={form.inpMobilephoneNumber}\r\n                                        onChange={handleInput}\r\n                                    />\r\n        \r\n                                    <CheckboxComponent\r\n                                        className=\"\"\r\n                                        label={<>Acepto la <a className=\"p_home__form_wrapper_container_check_link e-text-regular\" href=\"#\">Politica de Datos Personales y los Términos y Condiciones</a></>}\r\n                                        model={form.chkAllowPolicyProtection}\r\n                                        onChange={handleCheckbox}\r\n                                    />\r\n        \r\n        \r\n                                    <CheckboxComponent\r\n                                        className=\"\"\r\n                                        label={<>Acepto la <a className=\"p_home__form_wrapper_container_check_link e-text-regular\" href=\"#\">Politica de Envío de Comunicaciones Comerciales</a></>}\r\n                                        model={form.chkAllowPolicyDelivery}\r\n                                        onChange={handleCheckbox}\r\n                                    />\r\n                                    <ButtonComponent type={\"submit\"} loading={isLoadingForm} disabled={!isEnable}>COMENCEMOS</ButtonComponent>\r\n                                </form>\r\n                            </div>\r\n                        </>\r\n                    :\r\n                        <WizardComponent\r\n                            handleChangeStep={handleChangeStepWizard}\r\n                            items={getWizardItems()}\r\n                            hideStepContent\r\n                        >\r\n\r\n                        </WizardComponent>  \r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Component;","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\models\\ContactModel.ts",[],"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\helpers\\FormValidatorHelper.ts",[],"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\helpers\\DocumentTypeConstant.ts",[],"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\helpers\\FormHelper.ts",[],"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\InputComponent\\index.tsx",[],"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\CheckboxComponent\\index.tsx",[],"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\ButtonComponent\\index.tsx",[],"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\SelectComponent\\index.tsx",["102","103","104","105","106","107"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { iSelectModel, iOnChangeSelect } from '@helpers/FormValidatorHelper.ts';\r\nimport {ReactComponent as ArrowDownIcon} from '@icons/arrow-down.svg'\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss'\r\n\r\ninterface iProps {\r\n    label: string;\r\n    model: iSelectModel;\r\n    options?: Array<any>;\r\n    className?: string;\r\n    onChange?: (select: iOnChangeSelect) => void\r\n}\r\n\r\n\r\nconst Component:React.FunctionComponent<iProps> = (props:iProps) => {\r\n\r\n    const [showDropdown, setShowDropdown] = useState<boolean>(false);\r\n    const [loadRender, setLoadRender] = useState<boolean>(false);\r\n    const [position, setPosition] = useState<\"top\" | \"bottom\">(\"bottom\");\r\n    const [dropdownInlineStyle, setDropdownInlineStyle] = useState<any>({});\r\n    let disabled = props.model.disabled || false;\r\n    let isLoading = props.model.isLoading || false;\r\n    let keyCode = props.model.keyCode || \"key\";\r\n    let keyText = props.model.keyText || \"text\";\r\n    let options = props.options || [];\r\n\r\n    let refFormGroup: any = useRef(null);\r\n    let refDropdown: any = useRef(null);\r\n\r\n    useEffect(() => {\r\n        !loadRender && setLoadRender(true)\r\n      }, []);\r\n\r\n    function handleChange(event: any) {\r\n    }\r\n\r\n    function handleDropdown(option:any) {\r\n        props.onChange && props.onChange({\r\n          name: props.model.name,\r\n          keyCode: option[keyCode],\r\n          keyText: option[keyText],\r\n        });\r\n      }\r\n\r\n    const renderDropdown = () => {\r\n        return (\r\n          <div\r\n            className={`c_select__dropdown e-animation-fadein-up-select ${(showDropdown ? \"c_select__dropdown_Show\" : '')}`}\r\n            style={dropdownInlineStyle}\r\n            ref={refDropdown}\r\n          >\r\n            <ul className=\"c_select__dropdown_list\">\r\n              {options.map((option) => {\r\n                let optionCode = option[keyCode]\r\n                let optionText = option[keyText]\r\n                return (\r\n                  <li\r\n                    className={`c_select__dropdown_item e-text-regular ${optionCode === props.model.value ? \"c_select__dropdown_item_Selected\": ''}`}\r\n                    onMouseDown={() => { handleDropdown(option) }}\r\n                    key={optionCode}\r\n                    data-keyprop={optionCode}\r\n                  >\r\n                    {optionText}\r\n                  </li>\r\n                )\r\n              })}\r\n              {\r\n                !options.length &&\r\n                <li className={`c_select__dropdown_item e-text-regular`}>Sin resultados</li>\r\n              }\r\n            </ul>\r\n          </div>\r\n        )\r\n      }\r\n\r\n    function hideDropdown() {\r\n        setShowDropdown(false);\r\n    }\r\n\r\n    function getOptionActive() {\r\n        let dafaultValues = { value: \"\", valueText: \"\" }\r\n\r\n        if (props.model.value && options.length > 0) {\r\n            for (const option of options) {\r\n            let optionCode = option[keyCode]\r\n            let optionText = option[keyText]\r\n\r\n            if (optionCode === props.model.value) {\r\n                dafaultValues = {\r\n                value: optionCode,\r\n                valueText: optionText,\r\n                }\r\n            }\r\n            }\r\n        }\r\n\r\n        return dafaultValues\r\n    }\r\n    \r\n    function evaluateShowDropdown() {\r\n        if (showDropdown) {\r\n            hideDropdown();\r\n        }\r\n        else {\r\n            setShowDropdown(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`c_select ${props.className}`}>\r\n            <input\r\n            name={props.model.name}\r\n            className={`c_select__field e-text-regular`}\r\n            required={props.model.isRequired || false}\r\n            type=\"text\"\r\n            onClick={evaluateShowDropdown}\r\n            onBlur={hideDropdown}\r\n            onChange={handleChange}\r\n            disabled={disabled || isLoading}\r\n            readOnly\r\n            value={getOptionActive().valueText}\r\n            data-input-type=\"select\"\r\n            />\r\n            <span className={`c_select__icon_container ${(showDropdown ? 'show' : '')}`}>\r\n            <ArrowDownIcon className={\"c_select__icon\"} />\r\n            </span>\r\n\r\n            {\r\n            loadRender &&\r\n                renderDropdown()\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Component;","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\helpers\\FormPattern.ts",["108"],"export class FormPattern {\r\n    get pattern() {\r\n      return {\r\n        email: \"^.+@[^\\\\.].*\\\\.[a-zA-Z]{2,}$\",\r\n        decimal: \"[0-9]+(\\.[0-9][0-9]?)?\",\r\n        date: \"^([0-2][0-9]|(3)[0-1])(\\\\/)(((0)[0-9])|((1)[0-2]))(\\\\/)\\\\d{4}$\",\r\n      }\r\n    }\r\n  }\r\n  ","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\InputDateComponents\\index.tsx",["109"],"import React from 'react';\r\nimport './index.scss';\r\nimport { iInputModel } from '@helpers/FormValidatorHelper.ts';\r\ninterface iProps {\r\n    label: string;\r\n    className?: string;\r\n    model:iInputModel;\r\n    onChange?: (event: any) => void;\r\n}\r\n\r\nconst Component:React.FunctionComponent<iProps> = (props:iProps) => {\r\n    let value = props.model.value || \"\";\r\n\r\n    function handleChange(event: any) {\r\n        let targetValue = event.target.value\r\n        let targetType = event.target.type\r\n        \r\n        event.target.value = targetValue;\r\n        props.onChange && props.onChange(event);\r\n    }\r\n\r\n    function isInvalid(): boolean {\r\n        return Boolean(props.model.validity && (\r\n          props.model.validity.patternMismatch ||\r\n          props.model.validity.typeMismatch ||\r\n          props.model.postSubmitError ||\r\n          (props.model.validationError && !props.model.validationError.valid) ||\r\n          props.model.validity.tooShort\r\n        ))\r\n    }\r\n\r\n    let classHasValue = value.length ? \"c_input__wrapper__HasValue\" : \"\";\r\n    let classInvalid = isInvalid() ? \"c_input__wrapper__IsInvalid\" : \"\";\r\n    return (\r\n        <div className={`c_input ${props.className}`}>\r\n            <div className={`c_input__wrapper ${classHasValue} ${classInvalid}`}>\r\n                <input className=\"c_input__wrapper_field date\"\r\n                    name={props.model.name}\r\n                    required={props.model.isRequired || false}\r\n                    disabled={props.model.disabled || false}\r\n                    value={value}\r\n                    type={\"date\"}\r\n                    onChange={handleChange}\r\n                    minLength={props.model.minLength}\r\n                    maxLength={props.model.maxLength}\r\n                >\r\n                </input>\r\n                <label className=\"c_input__label e-text-regular\">{props.label}</label>\r\n            </div>\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default Component;","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\services\\PersonaServices.ts",["110"],"import api from '@helpers/HttpsConnection.ts';\r\n\r\nexport interface iBodyRequest{\r\n    documentType: string;\r\n    documentNumber: string;\r\n    birthDay: string;\r\n    phoneNumber: number;\r\n}\r\n\r\nexport interface iBodyResponse{\r\n    direccion?:string;\r\n    nomCompleto?:string;\r\n    indCrearTercero?:string;\r\n    estadoCivil?:string;\r\n    tipoPersona?:string;\r\n    telefono?:string;\r\n    apellidoPaterno?:string;\r\n    sexo?:string;\r\n    indRequiereDireccion?:string;\r\n    paisNacimiento?:string;\r\n    nombres?:string;\r\n    stsTercero?:string;\r\n    tipoDocumento?:string;\r\n    apellidoMaterno?:string;\r\n    numDocumento?:string;\r\n    fecNacimiento?:string;\r\n    correo?:string;\r\n}\r\n\r\nexport default {\r\n    getUserInfo(body:iBodyRequest){\r\n        return api.post('/obtenerdatospersona', body);\r\n    }\r\n}","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\helpers\\HttpsConnection.ts",[],"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\WizardComponent\\index.tsx",["111","112"],"import React, {useState,useRef} from 'react';\r\nimport {ReactComponent as BackIcon} from '@icons/left-arrow.svg'\r\nimport './index.scss';\r\n\r\ninterface iProps {\r\n    handleChangeStep?: Function;\r\n    enableClickStep?: boolean;\r\n    hideStepContent?: boolean;\r\n    classStepContent?: string;\r\n    items: Array<{\r\n      Component: any\r\n      props: any\r\n    }>;\r\n    ref?: any;\r\n    hideSteps?: boolean;\r\n  }\r\n  \r\n\r\nconst Component:React.FunctionComponent<iProps> = (props:iProps) => {\r\n    const refComponent: Array<any> = [];\r\n    const [active, setActive] = useState(0)\r\n    const [isResetSteps, setIsResetSteps] = useState<boolean>(false)\r\n\r\n    const changeStep = (index: number) => {\r\n        setActive(index)\r\n        \r\n        if (props.handleChangeStep) props.handleChangeStep(index)\r\n  \r\n        if (props.items[index].props.ref) {\r\n          props.items[index].props.ref.current.wizardOnShowContent && props.items[index].props.ref.current.wizardOnShowContent()\r\n        }\r\n        else {\r\n          refComponent[index].current.wizardOnShowContent && refComponent[index].current.wizardOnShowContent()\r\n        }\r\n    }\r\n\r\n    const nextStep = () => {\r\n        changeStep(active + 1)\r\n      }\r\n    \r\n    const  prevStep = () => {\r\n        changeStep(active - 1)\r\n    }\r\n    \r\n    const  resetStep = () => {\r\n        setIsResetSteps(true)\r\n        changeStep(0)\r\n    };\r\n    \r\n\r\n    const Component = props.items[active].Component\r\n    refComponent[active] = React.createRef();\r\n    return (\r\n        <div className=\"c_wizard\">\r\n            <div className=\"c_wizard__step\">\r\n                <button className=\"c_wizard__step_back_button\"><BackIcon/></button>\r\n                <p className=\"c_wizard__step_title e-p3\"><span className=\"c_wizard__step_title__Blue e-p3\">Paso {active+1}</span> de {props.items.length}</p>\r\n            </div>\r\n            <div className=\"c_wizard__content\">\r\n                <div\r\n                className={`c_wizard__content_item`}\r\n                >\r\n                <Component\r\n                    {...props}\r\n                    wizardPrevstep={prevStep}\r\n                    wizardNextstep={nextStep}\r\n                    wizardResetStep={resetStep}\r\n                    wizardGoStep={changeStep}\r\n                    ref={props.ref || refComponent![active]}\r\n                />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Component;","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\sections\\PersonalInfoSection\\index.tsx",["113","114","115","116","117","118","119","120","121"],"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\sections\\PlanSelectionSection\\index.tsx",["122"],"import React, {useState} from 'react';\r\nimport './index.scss';\r\n\r\nconst Component:React.FunctionComponent = () => {\r\n    return (\r\n        <p>\r\n         Formulario Plan Seleccion\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Component;","C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\models\\OwnerInfoModel.ts",[],"C:\\Users\\bruno\\Desktop\\retoRimac\\reto-rimac\\src\\components\\RadioComponent\\index.tsx",["123","124"],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":32,"column":12,"nodeType":"131","messageId":"132","endLine":32,"endColumn":22},{"ruleId":"129","severity":1,"message":"133","line":33,"column":24,"nodeType":"131","messageId":"132","endLine":33,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":34,"column":11,"nodeType":"136","messageId":"137","endLine":34,"endColumn":13},{"ruleId":"129","severity":1,"message":"138","line":35,"column":11,"nodeType":"131","messageId":"132","endLine":35,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":169,"column":60,"nodeType":"141","endLine":169,"endColumn":141},{"ruleId":"139","severity":1,"message":"140","line":177,"column":60,"nodeType":"141","endLine":177,"endColumn":141},{"ruleId":"129","severity":1,"message":"142","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":16},{"ruleId":"129","severity":1,"message":"143","line":20,"column":12,"nodeType":"131","messageId":"132","endLine":20,"endColumn":20},{"ruleId":"129","severity":1,"message":"144","line":20,"column":22,"nodeType":"131","messageId":"132","endLine":20,"endColumn":33},{"ruleId":"129","severity":1,"message":"145","line":21,"column":33,"nodeType":"131","messageId":"132","endLine":21,"endColumn":55},{"ruleId":"129","severity":1,"message":"146","line":28,"column":9,"nodeType":"131","messageId":"132","endLine":28,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":33,"column":10,"nodeType":"149","endLine":33,"endColumn":12,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":5,"column":26,"nodeType":"153","messageId":"154","endLine":5,"endColumn":27,"suggestions":"155"},{"ruleId":"129","severity":1,"message":"156","line":16,"column":13,"nodeType":"131","messageId":"132","endLine":16,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":30,"column":1,"nodeType":"159","endLine":34,"endColumn":2},{"ruleId":"129","severity":1,"message":"160","line":1,"column":25,"nodeType":"131","messageId":"132","endLine":1,"endColumn":31},{"ruleId":"129","severity":1,"message":"161","line":22,"column":12,"nodeType":"131","messageId":"132","endLine":22,"endColumn":24},{"ruleId":"129","severity":1,"message":"162","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":25},{"ruleId":"129","severity":1,"message":"163","line":27,"column":27,"nodeType":"131","messageId":"132","endLine":27,"endColumn":43},{"ruleId":"129","severity":1,"message":"164","line":28,"column":22,"nodeType":"131","messageId":"132","endLine":28,"endColumn":33},{"ruleId":"129","severity":1,"message":"130","line":29,"column":12,"nodeType":"131","messageId":"132","endLine":29,"endColumn":22},{"ruleId":"129","severity":1,"message":"165","line":29,"column":24,"nodeType":"131","messageId":"132","endLine":29,"endColumn":37},{"ruleId":"129","severity":1,"message":"166","line":30,"column":12,"nodeType":"131","messageId":"132","endLine":30,"endColumn":22},{"ruleId":"129","severity":1,"message":"133","line":30,"column":24,"nodeType":"131","messageId":"132","endLine":30,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":31,"column":11,"nodeType":"136","messageId":"137","endLine":31,"endColumn":13},{"ruleId":"129","severity":1,"message":"167","line":42,"column":11,"nodeType":"131","messageId":"132","endLine":42,"endColumn":25},{"ruleId":"129","severity":1,"message":"168","line":1,"column":16,"nodeType":"131","messageId":"132","endLine":1,"endColumn":24},{"ruleId":"129","severity":1,"message":"168","line":1,"column":16,"nodeType":"131","messageId":"132","endLine":1,"endColumn":24},{"ruleId":"129","severity":1,"message":"169","line":29,"column":18,"nodeType":"131","messageId":"132","endLine":29,"endColumn":31},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"@typescript-eslint/no-unused-vars","'stepActive' is assigned a value but never used.","Identifier","unusedVar","'setTotalStep' is assigned a value but never used.","no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","unexpected","'refWizard' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ReactDOM' is defined but never used.","'position' is assigned a value but never used.","'setPosition' is assigned a value but never used.","'setDropdownInlineStyle' is assigned a value but never used.","'refFormGroup' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadRender'. Either include it or remove the dependency array.","ArrayExpression",["172"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["173","174"],"'targetType' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useRef' is defined but never used.","'isResetSteps' is assigned a value but never used.","'CheckboxComponent' is defined but never used.","'setIsLoadingForm' is assigned a value but never used.","'setIsEnable' is assigned a value but never used.","'setStepActive' is assigned a value but never used.","'totalSteps' is assigned a value but never used.","'handleCheckbox' is assigned a value but never used.","'useState' is defined but never used.","'classSelected' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"messageId":"177","fix":"178","desc":"179"},{"messageId":"180","fix":"181","desc":"182"},"Update the dependencies array to be: [loadRender]",{"range":"183","text":"184"},"removeEscape",{"range":"185","text":"186"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"187","text":"188"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1221,1223],"[loadRender]",[138,139],"",[138,138],"\\"]